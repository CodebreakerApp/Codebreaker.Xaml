<Page
    x:Class="CodeBreaker.WinUI.Views.GamePage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:views="using:CodeBreaker.WinUI.Views"
    xmlns:conv="using:CodeBreaker.WinUI.Converters"
    xmlns:toolkitConverters="using:CommunityToolkit.WinUI.UI.Converters"
    mc:Ignorable="d">
    <Page.Resources>
        <conv:GameStatusToVisibilityConverter x:Key="GameStatusVisibility" />
        <toolkitConverters:BoolToVisibilityConverter x:Key="BoolToVisibility" />
        <Style TargetType="InfoBar">
            <Setter Property="Margin" Value="0,0,0,30" />
        </Style>
    </Page.Resources>
    <Grid x:Name="ContentArea">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <InfoBar 
            Grid.Row="0" 
            Severity="Informational"
            IsOpen="{x:Bind ViewModel.InfoMessage.IsVisible, Mode=OneWay}"
            Message="{x:Bind ViewModel.InfoMessage.Message, Mode=OneWay}"
            IsIconVisible="True" 
            IsClosable="True">
            <InfoBar.ActionButton>
                <Button
                    Visibility="{x:Bind Path=ViewModel.InfoMessage.HasAction, Converter={StaticResource BoolToVisibility}, ConverterParameter=False}"
                    Command="{x:Bind Path=ViewModel.InfoMessage.ActionCommand, Mode=OneTime}"
                    Content="{x:Bind Path=ViewModel.InfoMessage.ActionTitle, Mode=OneTime}" />
            </InfoBar.ActionButton>
        </InfoBar>
        <InfoBar
            Grid.Row="0"
            IsOpen="{x:Bind ViewModel.ErrorMessage.IsVisible, Mode=OneWay}"
            Severity="Error"
            Message="{x:Bind ViewModel.ErrorMessage.Message, Mode=OneWay}"
            IsIconVisible="True"
            IsClosable="True">
            <InfoBar.ActionButton>
                <Button
                    Visibility="{x:Bind Path=ViewModel.ErrorMessage.HasAction, Converter={StaticResource BoolToVisibility}, ConverterParameter=False}"
                    Command="{x:Bind Path=ViewModel.ErrorMessage.ActionCommand, Mode=OneTime}"
                    Content="{x:Bind Path=ViewModel.ErrorMessage.ActionTitle, Mode=OneTime}" />
            </InfoBar.ActionButton>
        </InfoBar>
        <!--Startgame section-->
        <Grid
            Grid.Row="1"
            ColumnSpacing="25"
            Visibility="{x:Bind ViewModel.GameStatus, Mode=OneWay, Converter={StaticResource GameStatusVisibility}, ConverterParameter=Start}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <!-- The extra grid and the empy (enabled) TextBlock are necessary for showing the tooltip over the (disabled) TextBox. -->
                <TextBlock />
                <TextBox
                    IsEnabled="{x:Bind ViewModel.IsNameEnterable, Mode=OneWay}"
                    x:Name="TextName"
                    Header="Gamername"
                    VerticalAlignment="Center"
                    PlaceholderText="Enter your Gamername"
                    Text="{x:Bind ViewModel.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <ToolTipService.ToolTip>
                    <ToolTip
                        IsEnabled="{x:Bind Path=ViewModel.IsNamePredefined, Mode=OneWay}"
                        Content="The gamername was already defined during sign-up"
                        Placement="Bottom" />
                </ToolTipService.ToolTip>
            </Grid>
            <Button
                Grid.Column="1"
                VerticalAlignment="Bottom"
                HorizontalAlignment="Stretch"
                Padding="35,8"
                Command="{x:Bind Path=ViewModel.StartGameCommand, Mode=OneTime}">
                <StackPanel Orientation="Vertical" Spacing="5">
                    <SymbolIcon Symbol="Play" Visibility="{x:Bind Path=ViewModel.StartGameCommand.IsRunning, Mode=OneWay, Converter={StaticResource BoolToVisibility}, ConverterParameter=True}" />
                    <ProgressRing Visibility="{x:Bind Path=ViewModel.StartGameCommand.IsRunning, Mode=OneWay}" Width="20" Height="20" />
                    <TextBlock Text="Start the game" />
                </StackPanel>
            </Button>
        </Grid>
        <!--Gamebar section-->
        <StackPanel
            Orientation="Horizontal"
            Grid.Row="1"
            Visibility="{x:Bind ViewModel.GameStatus, Mode=OneWay, Converter={StaticResource GameStatusVisibility}, ConverterParameter=Cancelable}">
            <!--<AppBarButton Label="Cancel" Icon="Cancel" IsEnabled="False" />-->
            <views:PegSelectionView 
                Grid.Row="2"
                ViewModel="{x:Bind ViewModel, Mode=OneWay}" />
        </StackPanel>
        <!--Move section-->
        <ListBox 
            x:Name="listGameMoves"
            Grid.Row="3" 
            Visibility="{x:Bind ViewModel.GameStatus, Mode=OneWay, Converter={StaticResource GameStatusVisibility}, ConverterParameter=Running}"
            ItemsSource="{x:Bind ViewModel.GameMoves, Mode=OneWay}"
            ItemTemplate="{StaticResource Codebreaker6x4CodePegs}" />
    </Grid>

</Page>
